#***************************************************************************
#                                  _   _ ____  _
#  Project                     ___| | | |  _ \| |
#                             / __| | | | |_) | |
#                            | (__| |_| |  _ <| |___
#                             \___|\___/|_| \_\_____|
#
# Copyright (C) 1998 - 2009, Daniel Stenberg, <daniel@haxx.se>, et al.
#
# This software is licensed as described in the file COPYING, which
# you should have received as part of this distribution. The terms
# are also available at http://curl.haxx.se/docs/copyright.html.
#
# You may opt to use, copy, modify, merge, publish, distribute and/or sell
# copies of the Software, and permit persons to whom the Software is
# furnished to do so, under the terms of the COPYING file.
#
# This software is distributed on an "AS IS" basis, WITHOUT WARRANTY OF ANY
# KIND, either express or implied.
#
# $Id$
#***************************************************************************

# --------------------------------------------------------------------------
#                      curl and libcurl MSVC makefile
# --------------------------------------------------------------------------
#
# All makefile options use default values when not specified. Options that
# are documented below these lines can be used to highly customize how the
# curl tool and the libcurl library are built. Options can be specified in
# any order.
#
# To build curl and libcurl with default options run the following command:
#
#   nmake -f Makefile.msvc
#
#
# Makefile options:
# -----------------
#
#
# ENABLE_STATIC  = YES|NO|1|0
# ENABLE_SHARED  = YES|NO|1|0
# DISABLE_STATIC = YES|NO|1|0
# DISABLE_SHARED = YES|NO|1|0
#
#   Whether a shared (.dll) or static (.lib) libcurl library is built, and
#   used for curl, can be specified when running nmake providing one of the
#   above four options with a valid value. If none of these four options is
#   given, default behaviour is to build a shared (.dll) libcurl library.
#
#   Any of the following five commands builds a shared (.dll) libcurl library:
#
#     nmake -f Makefile.msvc
#     nmake -f Makefile.msvc ENABLE_STATIC=NO
#     nmake -f Makefile.msvc ENABLE_SHARED=YES
#     nmake -f Makefile.msvc DISABLE_STATIC=YES
#     nmake -f Makefile.msvc DISABLE_SHARED=NO
#
#   Any of the following four commands builds a static (.lib) libcurl library:
#
#     nmake -f Makefile.msvc ENABLE_STATIC=YES
#     nmake -f Makefile.msvc ENABLE_SHARED=NO
#     nmake -f Makefile.msvc DISABLE_STATIC=NO
#     nmake -f Makefile.msvc DISABLE_SHARED=YES
#
#
# ENABLE_DEBUG    = YES|NO|1|0
# ENABLE_RELEASE  = YES|NO|1|0
# DISABLE_DEBUG   = YES|NO|1|0
# DISABLE_RELEASE = YES|NO|1|0
#
#   Whether a debug or release version libcurl library is built, and used for
#   curl, can be specified when running nmake providing one of the above four
#   options with a valid value. If none of these four options is given, default
#   behaviour is to build a release libcurl library.
#
#   Any of the following five commands builds a release libcurl library:
#
#     nmake -f Makefile.msvc
#     nmake -f Makefile.msvc ENABLE_DEBUG=NO
#     nmake -f Makefile.msvc ENABLE_RELEASE=YES
#     nmake -f Makefile.msvc DISABLE_DEBUG=YES
#     nmake -f Makefile.msvc DISABLE_RELEASE=NO
#
#   Any of the following four commands builds a debug libcurl library:
#
#     nmake -f Makefile.msvc ENABLE_DEBUG=YES
#     nmake -f Makefile.msvc ENABLE_RELEASE=NO
#     nmake -f Makefile.msvc DISABLE_DEBUG=NO
#     nmake -f Makefile.msvc DISABLE_RELEASE=YES
#
#
# ENABLE_OPTIMIZE  = YES|NO|1|0
# DISABLE_OPTIMIZE = YES|NO|1|0
#
#   Whether compiler optimizations will be enabled or disabled when building
#   libcurl library, and curl, can be specified when running nmake providing
#   one of the above two options with a valid value. If none of these options
#   are given, default behaviour is to use optimizations for release builds
#   and no compiler optimizations for debug builds.
#
#   Any of the following three commands builds libcurl with optimizations:
#
#     nmake -f Makefile.msvc
#     nmake -f Makefile.msvc ENABLE_OPTIMIZE=YES
#     nmake -f Makefile.msvc DISABLE_OPTIMIZE=NO
#
#   Any of the following two commands builds libcurl without optimizations:
#
#     nmake -f Makefile.msvc ENABLE_OPTIMIZE=NO
#     nmake -f Makefile.msvc DISABLE_OPTIMIZE=YES
#
#
# ENABLE_WARNINGS  = YES|NO|1|0
# DISABLE_WARNINGS = YES|NO|1|0
#
#   Whether strict compiler warnings will be enabled or disabled when building
#   libcurl library, and curl, can be specified when running nmake providing
#   one of the above two options with a valid value. If none of these options
#   are given, default behaviour is to use strict compiler warnings for debug
#   builds and issue less compiler warnings for release builds.
#
#   Any of the following three commands builds libcurl without strict warnings:
#
#     nmake -f Makefile.msvc
#     nmake -f Makefile.msvc ENABLE_WARNINGS=NO
#     nmake -f Makefile.msvc DISABLE_WARNINGS=YES
#
#   Any of the following two commands builds libcurl with strict warnings:
#
#     nmake -f Makefile.msvc ENABLE_WARNINGS=YES
#     nmake -f Makefile.msvc DISABLE_WARNINGS=NO
#
#
# WITH_CRT = DYNAMIC|SHARED|DLL|STATIC|PRIVATE|LIB
#
#   This option allows to specify which C run-time library will be used for
#   curl and libcurl. DYNAMIC, SHARED and DLL are all synonyms and imply that
#   libcurl linking will be done with the dynamic C run-time. On the other hand
#   STATIC, PRIVATE and LIB will force linking with the static C run-time. When
#   not specified the default behaviour is to use the dynamic C run-time.
#
#   Any of the following four commands builds libcurl with the dynamic CRT:
#
#     nmake -f Makefile.msvc
#     nmake -f Makefile.msvc WITH_CRT=DYNAMIC
#     nmake -f Makefile.msvc WITH_CRT=SHARED
#     nmake -f Makefile.msvc WITH_CRT=DLL
#
#   Any of the following three commands builds libcurl with the static CRT:
#
#     nmake -f Makefile.msvc WITH_CRT=STATIC
#     nmake -f Makefile.msvc WITH_CRT=PRIVATE
#     nmake -f Makefile.msvc WITH_CRT=LIB
#
#
# ENABLE_SAFETYNET  = YES|NO|1|0
# DISABLE_SAFETYNET = YES|NO|1|0
#
#   Whether highly discouraged build option combinations will be handled as
#   fatal build errors or warnings when building libcurl library, and curl, can
#   be specified using one of the above two options with a valid value. If none
#   of these options are given, default behaviour is to have build safety net
#   enabled wich results in fatal build errors when option combinations which
#   are highly discouraged are detected.
#
#   Any of the following three commands builds libcurl with safety build checks:
#
#     nmake -f Makefile.msvc
#     nmake -f Makefile.msvc ENABLE_SAFETYNET=YES
#     nmake -f Makefile.msvc DISABLE_SAFETYNET=NO
#
#   The following two commands builds libcurl without safety build checks:
#
#     nmake -f Makefile.msvc DISABLE_SAFETYNET=YES
#     nmake -f Makefile.msvc ENABLE_SAFETYNET=NO
#
#


# -------------------------------------------------------
# Control messages shown while processing this makefile
# -------------------------------------------------------
 
MAKEFILE_VERBOSITY = 2

# -------------------------------
# Ensure that MSVC is available
# -------------------------------

!IF "$(MSVCDIR)" == ""
!  MESSAGE Environment variable MSVCDIR not set.
!  MESSAGE Run MSVC's vcvars32.bat or vsvars32.bat to fix above condition
!  MESSAGE and properly configure other Visual Studio environment variables.
!  ERROR   See previous message.
!ENDIF

# -----------------------------------------------
# Ensure that Windows/Platform SDK is available
# -----------------------------------------------

!IF "$(MSSDK)" == ""
!  MESSAGE Environment variable MSSDK not set.
!  MESSAGE Run Windows SDK's setenv.bat or setenv.cmd to fix above condition
!  MESSAGE and properly configure other Windows SDK environment variables.
!  ERROR   See previous message.
!ENDIF

# --------------------------------------------
# Detect NMAKE version deducing MSVC version
# --------------------------------------------

!IFNDEF _NMAKE_VER
!  MESSAGE Macro _NMAKE_VER not defined.
!  MESSAGE Use MSVC's NMAKE to process this makefile.
!  ERROR   See previous message.
!ENDIF

!IF     "$(_NMAKE_VER)" == "6.00.8168.0"
CC_VERS_NUM = 60
!ELSEIF "$(_NMAKE_VER)" == "6.00.9782.0"
CC_VERS_NUM = 60
!ELSEIF "$(_NMAKE_VER)" == "7.00.9466"
CC_VERS_NUM = 70
!ELSEIF "$(_NMAKE_VER)" == "7.00.9955"
CC_VERS_NUM = 70
!ELSEIF "$(_NMAKE_VER)" == "7.10.3077"
CC_VERS_NUM = 71
!ELSEIF "$(_NMAKE_VER)" == "8.00.40607.16"
CC_VERS_NUM = 80
!ELSEIF "$(_NMAKE_VER)" == "8.00.50727.42"
CC_VERS_NUM = 80
!ELSEIF "$(_NMAKE_VER)" == "8.00.50727.762"
CC_VERS_NUM = 80
!ELSEIF "$(_NMAKE_VER)" == "9.00.21022.08"
CC_VERS_NUM = 90
!ELSEIF "$(_NMAKE_VER)" == "9.00.30729.01"
CC_VERS_NUM = 90
!ELSE
!  MESSAGE Unknown value for _NMAKE_VER macro: "$(_NMAKE_VER)"
!  MESSAGE Please, report this condition on the libcurl development
!  MESSAGE mailing list: http://cool.haxx.se/mailman/listinfo/curl-library/
!  ERROR   See previous message.
!ENDIF

CC_VERS_STR = vc$(CC_VERS_NUM)

# ------------------------------------------------------------
# Ensure that current subdirectory matches makefile location
# ------------------------------------------------------------

!IF !EXIST("Makefile.msvc")
!  MESSAGE Makefile.msvc not found in current subdirectory.
!  MESSAGE Process Makefile.msvc from the subdirectory where it is located.
!  ERROR   See previous message.
!ENDIF

# ------------------------------------------------------------------------------
# Build time safety net selection. Default is to build with saftey net enabled
# ------------------------------------------------------------------------------

OPT_SAFETYNET =
OPT_SAFETYNET_SET =

!IF     "$(ENABLE_SAFETYNET)" == "YES" || \
        "$(ENABLE_SAFETYNET)" == "yes" || \
        "$(ENABLE_SAFETYNET)" == "1"
OPT_SAFETYNET = yes
OPT_SAFETYNET_SET = X$(OPT_SAFETYNET_SET)
!ELSEIF "$(ENABLE_SAFETYNET)" == "NO"  || \
        "$(ENABLE_SAFETYNET)" == "no"  || \
        "$(ENABLE_SAFETYNET)" == "0"
OPT_SAFETYNET = no
OPT_SAFETYNET_SET = X$(OPT_SAFETYNET_SET)
!ELSEIF "$(ENABLE_SAFETYNET)" != ""
!  MESSAGE Invalid ENABLE_SAFETYNET option value. It must be: YES, NO, 1 or 0.
!  ERROR   See previous message.
!ENDIF

!IF     "$(DISABLE_SAFETYNET)" == "YES" || \
        "$(DISABLE_SAFETYNET)" == "yes" || \
        "$(DISABLE_SAFETYNET)" == "1"
OPT_SAFETYNET = no
OPT_SAFETYNET_SET = X$(OPT_SAFETYNET_SET)
!ELSEIF "$(DISABLE_SAFETYNET)" == "NO"  || \
        "$(DISABLE_SAFETYNET)" == "no"  || \
        "$(DISABLE_SAFETYNET)" == "0"
OPT_SAFETYNET = yes
OPT_SAFETYNET_SET = X$(OPT_SAFETYNET_SET)
!ELSEIF "$(DISABLE_SAFETYNET)" != ""
!  MESSAGE Invalid DISABLE_SAFETYNET option value. It must be: YES, NO, 1 or 0.
!  ERROR   See previous message.
!ENDIF

!IF     "$(OPT_SAFETYNET_SET)" == ""
OPT_SAFETYNET = yes
!ELSEIF "$(OPT_SAFETYNET_SET)" != "X"
!  MESSAGE Mutually exclusive options detected.
!  MESSAGE To specify whether highly discouraged build option combinations or
!  MESSAGE conditions should be handled as fatal build errors or warnings when
!  MESSAGE building libcurl library, only a single option among ENABLE_SAFETYNET
!  MESSAGE or DISABLE_SAFETYNET is allowed at a given time.
!ENDIF

# ------------------------------------------------------------------------------
# libcurl library type selection. Default is libcurl shared library (.dll)
# ------------------------------------------------------------------------------

OPT_LIBTYPE =
OPT_LIBTYPE_SET =

!IF     "$(ENABLE_STATIC)" == "YES" || \
        "$(ENABLE_STATIC)" == "yes" || \
        "$(ENABLE_STATIC)" == "1"
OPT_LIBTYPE = lib
OPT_LIBTYPE_SET = X$(OPT_LIBTYPE_SET)
!ELSEIF "$(ENABLE_STATIC)" == "NO"  || \
        "$(ENABLE_STATIC)" == "no"  || \
        "$(ENABLE_STATIC)" == "0"
OPT_LIBTYPE = dll
OPT_LIBTYPE_SET = X$(OPT_LIBTYPE_SET)
!ELSEIF "$(ENABLE_STATIC)" != ""
!  MESSAGE Invalid ENABLE_STATIC option value. It must be: YES, NO, 1 or 0.
!  ERROR   See previous message.
!ENDIF

!IF     "$(ENABLE_SHARED)" == "YES" || \
        "$(ENABLE_SHARED)" == "yes" || \
        "$(ENABLE_SHARED)" == "1"
OPT_LIBTYPE = dll
OPT_LIBTYPE_SET = X$(OPT_LIBTYPE_SET)
!ELSEIF "$(ENABLE_SHARED)" == "NO"  || \
        "$(ENABLE_SHARED)" == "no"  || \
        "$(ENABLE_SHARED)" == "0"
OPT_LIBTYPE = lib
OPT_LIBTYPE_SET = X$(OPT_LIBTYPE_SET)
!ELSEIF "$(ENABLE_SHARED)" != ""
!  MESSAGE Invalid ENABLE_SHARED option value. It must be: YES, NO, 1 or 0.
!  ERROR   See previous message.
!ENDIF

!IF     "$(DISABLE_STATIC)" == "YES" || \
        "$(DISABLE_STATIC)" == "yes" || \
        "$(DISABLE_STATIC)" == "1"
OPT_LIBTYPE = dll
OPT_LIBTYPE_SET = X$(OPT_LIBTYPE_SET)
!ELSEIF "$(DISABLE_STATIC)" == "NO"  || \
        "$(DISABLE_STATIC)" == "no"  || \
        "$(DISABLE_STATIC)" == "0"
OPT_LIBTYPE = lib
OPT_LIBTYPE_SET = X$(OPT_LIBTYPE_SET)
!ELSEIF "$(DISABLE_STATIC)" != ""
!  MESSAGE Invalid DISABLE_STATIC option value. It must be: YES, NO, 1 or 0.
!  ERROR   See previous message.
!ENDIF

!IF     "$(DISABLE_SHARED)" == "YES" || \
        "$(DISABLE_SHARED)" == "yes" || \
        "$(DISABLE_SHARED)" == "1"
OPT_LIBTYPE = lib
OPT_LIBTYPE_SET = X$(OPT_LIBTYPE_SET)
!ELSEIF "$(DISABLE_SHARED)" == "NO"  || \
        "$(DISABLE_SHARED)" == "no"  || \
        "$(DISABLE_SHARED)" == "0"
OPT_LIBTYPE = dll
OPT_LIBTYPE_SET = X$(OPT_LIBTYPE_SET)
!ELSEIF "$(DISABLE_SHARED)" != ""
!  MESSAGE Invalid DISABLE_SHARED option value. It must be: YES, NO, 1 or 0.
!  ERROR   See previous message.
!ENDIF

!IF     "$(OPT_LIBTYPE_SET)" == ""
OPT_LIBTYPE = dll
!ELSEIF "$(OPT_LIBTYPE_SET)" != "X"
!  MESSAGE Mutually exclusive options detected.
!  MESSAGE In order to specify wether to build a shared (.dll) or static (.lib)
!  MESSAGE libcurl library, only one option among ENABLE_STATIC, ENABLE_SHARED,
!  MESSAGE DISABLE_STATIC, or DISABLE_SHARED is allowed at a given time.
!  ERROR   See previous message.
!ENDIF

# ------------------------------------------------------------------------------
# libcurl library debug or release build selection. Default is release build
# ------------------------------------------------------------------------------

OPT_DEBUG =
OPT_DEBUG_SET =

!IF     "$(ENABLE_DEBUG)" == "YES" || \
        "$(ENABLE_DEBUG)" == "yes" || \
        "$(ENABLE_DEBUG)" == "1"
OPT_DEBUG = yes
OPT_DEBUG_SET = X$(OPT_DEBUG_SET)
!ELSEIF "$(ENABLE_DEBUG)" == "NO"  || \
        "$(ENABLE_DEBUG)" == "no"  || \
        "$(ENABLE_DEBUG)" == "0"
OPT_DEBUG = no
OPT_DEBUG_SET = X$(OPT_DEBUG_SET)
!ELSEIF "$(ENABLE_DEBUG)" != ""
!  MESSAGE Invalid ENABLE_DEBUG option value. It must be: YES, NO, 1 or 0.
!  ERROR   See previous message.
!ENDIF

!IF     "$(ENABLE_RELEASE)" == "YES" || \
        "$(ENABLE_RELEASE)" == "yes" || \
        "$(ENABLE_RELEASE)" == "1"
OPT_DEBUG = no
OPT_DEBUG_SET = X$(OPT_DEBUG_SET)
!ELSEIF "$(ENABLE_RELEASE)" == "NO"  || \
        "$(ENABLE_RELEASE)" == "no"  || \
        "$(ENABLE_RELEASE)" == "0"
OPT_DEBUG = yes
OPT_DEBUG_SET = X$(OPT_DEBUG_SET)
!ELSEIF "$(ENABLE_RELEASE)" != ""
!  MESSAGE Invalid ENABLE_RELEASE option value. It must be: YES, NO, 1 or 0.
!  ERROR   See previous message.
!ENDIF

!IF     "$(DISABLE_DEBUG)" == "YES" || \
        "$(DISABLE_DEBUG)" == "yes" || \
        "$(DISABLE_DEBUG)" == "1"
OPT_DEBUG = no
OPT_DEBUG_SET = X$(OPT_DEBUG_SET)
!ELSEIF "$(DISABLE_DEBUG)" == "NO"  || \
        "$(DISABLE_DEBUG)" == "no"  || \
        "$(DISABLE_DEBUG)" == "0"
OPT_DEBUG = yes
OPT_DEBUG_SET = X$(OPT_DEBUG_SET)
!ELSEIF "$(DISABLE_DEBUG)" != ""
!  MESSAGE Invalid DISABLE_DEBUG option value. It must be: YES, NO, 1 or 0.
!  ERROR   See previous message.
!ENDIF

!IF     "$(DISABLE_RELEASE)" == "YES" || \
        "$(DISABLE_RELEASE)" == "yes" || \
        "$(DISABLE_RELEASE)" == "1"
OPT_DEBUG = yes
OPT_DEBUG_SET = X$(OPT_DEBUG_SET)
!ELSEIF "$(DISABLE_RELEASE)" == "NO"  || \
        "$(DISABLE_RELEASE)" == "no"  || \
        "$(DISABLE_RELEASE)" == "0"
OPT_DEBUG = no
OPT_DEBUG_SET = X$(OPT_DEBUG_SET)
!ELSEIF "$(DISABLE_RELEASE)" != ""
!  MESSAGE Invalid DISABLE_RELEASE option value. It must be: YES, NO, 1 or 0.
!  ERROR   See previous message.
!ENDIF

!IF     "$(OPT_DEBUG_SET)" == ""
OPT_DEBUG = no
!ELSEIF "$(OPT_DEBUG_SET)" != "X"
!  MESSAGE Mutually exclusive options detected.
!  MESSAGE In order to specify wether to build a debug or release version of
!  MESSAGE libcurl library, only one option among ENABLE_DEBUG, ENABLE_RELEASE,
!  MESSAGE DISABLE_DEBUG, or DISABLE_RELEASE is allowed at a given time.
!  ERROR   See previous message.
!ENDIF

# ------------------------------------------------------------------------------
# libcurl library compiler optimizations build selection. Default setting is
# no compiler optimizations for debug builds, and optimizations for release.
# ------------------------------------------------------------------------------

OPT_OPTIMIZE =
OPT_OPTIMIZE_SET =

!IF     "$(ENABLE_OPTIMIZE)" == "YES" || \
        "$(ENABLE_OPTIMIZE)" == "yes" || \
        "$(ENABLE_OPTIMIZE)" == "1"
OPT_OPTIMIZE = yes
OPT_OPTIMIZE_SET = X$(OPT_OPTIMIZE_SET)
!ELSEIF "$(ENABLE_OPTIMIZE)" == "NO"  || \
        "$(ENABLE_OPTIMIZE)" == "no"  || \
        "$(ENABLE_OPTIMIZE)" == "0"
OPT_OPTIMIZE = no
OPT_OPTIMIZE_SET = X$(OPT_OPTIMIZE_SET)
!ELSEIF "$(ENABLE_OPTIMIZE)" != ""
!  MESSAGE Invalid ENABLE_OPTIMIZE option value. It must be: YES, NO, 1 or 0.
!  ERROR   See previous message.
!ENDIF

!IF     "$(DISABLE_OPTIMIZE)" == "YES" || \
        "$(DISABLE_OPTIMIZE)" == "yes" || \
        "$(DISABLE_OPTIMIZE)" == "1"
OPT_OPTIMIZE = no
OPT_OPTIMIZE_SET = X$(OPT_OPTIMIZE_SET)
!ELSEIF "$(DISABLE_OPTIMIZE)" == "NO"  || \
        "$(DISABLE_OPTIMIZE)" == "no"  || \
        "$(DISABLE_OPTIMIZE)" == "0"
OPT_OPTIMIZE = yes
OPT_OPTIMIZE_SET = X$(OPT_OPTIMIZE_SET)
!ELSEIF "$(DISABLE_OPTIMIZE)" != ""
!  MESSAGE Invalid DISABLE_OPTIMIZE option value. It must be: YES, NO, 1 or 0.
!  ERROR   See previous message.
!ENDIF

!IF     "$(OPT_OPTIMIZE_SET)" == "" && "$(OPT_DEBUG)" == "no"
OPT_OPTIMIZE = yes
!ELSEIF "$(OPT_OPTIMIZE_SET)" == ""
OPT_OPTIMIZE = no
!ELSEIF "$(OPT_OPTIMIZE_SET)" != "X"
!  MESSAGE Mutually exclusive options detected.
!  MESSAGE In order to specify wether compiler optimizations should be enabled
!  MESSAGE or disabled when building libcurl library, only a single option among
!  MESSAGE ENABLE_OPTIMIZE or DISABLE_OPTIMIZE is allowed at a given time.
!ENDIF

# TODO RIGHT HERE:
# Do we wish to disallow OPT_DEBUG=YES with OPT_OPTIMIZE=YES builds ?
# MSVC might get upset due to the compiler flags these settings would use.

# ------------------------------------------------------------------------------
# libcurl library compiler warnings build selection. Default setting is to
# maximize compiler warnings for debug builds, and less warnings for release.
# ------------------------------------------------------------------------------

OPT_WARNINGS =
OPT_WARNINGS_SET =

!IF     "$(ENABLE_WARNINGS)" == "YES" || \
        "$(ENABLE_WARNINGS)" == "yes" || \
        "$(ENABLE_WARNINGS)" == "1"
OPT_WARNINGS = yes
OPT_WARNINGS_SET = X$(OPT_WARNINGS_SET)
!ELSEIF "$(ENABLE_WARNINGS)" == "NO"  || \
        "$(ENABLE_WARNINGS)" == "no"  || \
        "$(ENABLE_WARNINGS)" == "0"
OPT_WARNINGS = no
OPT_WARNINGS_SET = X$(OPT_WARNINGS_SET)
!ELSEIF "$(ENABLE_WARNINGS)" != ""
!  MESSAGE Invalid ENABLE_WARNINGS option value. It must be: YES, NO, 1 or 0.
!  ERROR   See previous message.
!ENDIF

!IF     "$(DISABLE_WARNINGS)" == "YES" || \
        "$(DISABLE_WARNINGS)" == "yes" || \
        "$(DISABLE_WARNINGS)" == "1"
OPT_WARNINGS = no
OPT_WARNINGS_SET = X$(OPT_WARNINGS_SET)
!ELSEIF "$(DISABLE_WARNINGS)" == "NO"  || \
        "$(DISABLE_WARNINGS)" == "no"  || \
        "$(DISABLE_WARNINGS)" == "0"
OPT_WARNINGS = yes
OPT_WARNINGS_SET = X$(OPT_WARNINGS_SET)
!ELSEIF "$(DISABLE_WARNINGS)" != ""
!  MESSAGE Invalid DISABLE_WARNINGS option value. It must be: YES, NO, 1 or 0.
!  ERROR   See previous message.
!ENDIF

!IF     "$(OPT_WARNINGS_SET)" == "" && "$(OPT_DEBUG)" == "yes"
OPT_WARNINGS = yes
!ELSEIF "$(OPT_WARNINGS_SET)" == ""
OPT_WARNINGS = no
!ELSEIF "$(OPT_WARNINGS_SET)" != "X"
!  MESSAGE Mutually exclusive options detected.
!  MESSAGE In order to specify wether strict compiler warnings should be enabled
!  MESSAGE or disabled when building libcurl library, only a single option among
!  MESSAGE ENABLE_WARNINGS or DISABLE_WARNINGS is allowed at a given time.
!ENDIF

# ------------------------------------------------------------------------------
# C run-time library selection for curl and libcurl. Default is dynamic CRT.
# ------------------------------------------------------------------------------

OPT_CRT =
OPT_CRT_SET =

!IF     "$(WITH_CRT)" == "DYNAMIC" || \
        "$(WITH_CRT)" == "dynamic" || \
        "$(WITH_CRT)" == "SHARED"  || \
        "$(WITH_CRT)" == "shared"  || \
        "$(WITH_CRT)" == "DLL"     || \
        "$(WITH_CRT)" == "dll"
OPT_CRT = dynamic
OPT_CRT_SET = X$(OPT_CRT_SET)
!ELSEIF "$(WITH_CRT)" == "STATIC"  || \
        "$(WITH_CRT)" == "static"  || \
        "$(WITH_CRT)" == "PRIVATE" || \
        "$(WITH_CRT)" == "private" || \
        "$(WITH_CRT)" == "LIB"     || \
        "$(WITH_CRT)" == "lib"
OPT_CRT = static
OPT_CRT_SET = X$(OPT_CRT_SET)
!ELSEIF "$(WITH_CRT)" != ""
!  MESSAGE Invalid WITH_CRT option value. Must be: DYNAMIC, DLL, STATIC or LIB.
!  MESSAGE This option specifies which C run-time library libcurl will use.
!  ERROR   See previous message.
!ENDIF

!IF "$(OPT_CRT_SET)" == ""
OPT_CRT = dynamic
!ENDIF

!IF "$(OPT_LIBTYPE)" == "dll" && "$(OPT_CRT)" == "static"
!  IF "$(OPT_SAFETYNET)" == "yes"
!    MESSAGE +-----------------------------------------------------------------+
!    MESSAGE |  ERROR   ERROR   ERROR   ERROR   ERROR   ERROR   ERROR   ERROR  |
!    MESSAGE +-----------------------------------------------------------------+
!    MESSAGE |   Building a dynamic (.dll) libcurl library with a static or    |
!    MESSAGE |   private C run-time is highly discouraged and avoided here.    |
!    MESSAGE +-----------------------------------------------------------------+
!    MESSAGE |  ERROR   ERROR   ERROR   ERROR   ERROR   ERROR   ERROR   ERROR  |
!    MESSAGE +-----------------------------------------------------------------+
!    MESSAGE | Option DISABLE_SAFETYNET=YES converts this error into a warning |
!    MESSAGE +-----------------------------------------------------------------+
!    ERROR   See previous message.
!  ELSE
WARN_STATIC_CRT_DLL = yes
!  ENDIF
!ENDIF


# ------------------------------------------------------------------
# Show some variables and values that will be used further onwards
# ------------------------------------------------------------------

!IF $(MAKEFILE_VERBOSITY) >= 2
!  MESSAGE ----------------------------------
!  MESSAGE CC_VERS_NUM  = $(CC_VERS_NUM)
!  MESSAGE CC_VERS_STR  = $(CC_VERS_STR)
!  MESSAGE OPT_LIBTYPE  = $(OPT_LIBTYPE)
!  MESSAGE OPT_DEBUG    = $(OPT_DEBUG)
!  MESSAGE OPT_WARNINGS = $(OPT_WARNINGS)
!  MESSAGE OPT_OPTIMIZE = $(OPT_OPTIMIZE)
!  MESSAGE OPT_CRT      = $(OPT_CRT)
!  MESSAGE ----------------------------------
!ENDIF


# ----------------------------------------------------------------
# Show critical warnings when build safety net has been disabled
# ----------------------------------------------------------------

!IF "$(WARN_STATIC_CRT_DLL)" == "yes"
!  MESSAGE +-------------------------------------------------------------------+
!  MESSAGE |   WARNING  WARNING  WARNING  WARNING  WARNING  WARNING  WARNING   |
!  MESSAGE +-------------------------------------------------------------------+
!  MESSAGE |    Building a dynamic (.dll) libcurl library with a static or     |
!  MESSAGE |    private C run-time is highly discouraged. Don't cry later.     |
!  MESSAGE +-------------------------------------------------------------------+
!  MESSAGE |   WARNING  WARNING  WARNING  WARNING  WARNING  WARNING  WARNING   |
!  MESSAGE +-------------------------------------------------------------------+
!ENDIF
